kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    k8s-app: estuary-discovery
  name: estuary-discovery
  namespace: default
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: estuary-discovery
  template:
    metadata:
      labels:
        k8s-app: estuary-discovery
    spec:
      containers:
        - name: estuary-discovery
          image: dinutac/estuary-discovery:latest
#          imagePullPolicy: Never
          command: ["bash", "-c", "sleep 30 && /home/dev/scripts/main_flask.py"] #wait until eureka up
          env:
            - name: EUREKA_SERVER
              value: "http://netflixoss-eureka:8080/eureka/v2"
            - name: APP_IP_PORT
              value: "estuary-discovery:8080"
          ports:
            - containerPort: 8080
---
kind: Service
apiVersion: v1
metadata:
  labels:
    k8s-app: estuary-discovery
  name: estuary-discovery
  namespace: default
spec:
  type: NodePort
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    k8s-app: estuary-discovery
#---
#kind: Deployment
#apiVersion: apps/v1
#metadata:
#  labels:
#    k8s-app: netflixoss-eureka
#  name: netflixoss-eureka
#  namespace: default
#spec:
#  replicas: 1
#  revisionHistoryLimit: 10
#  selector:
#    matchLabels:
#      k8s-app: netflixoss-eureka
#  template:
#    metadata:
#      labels:
#        k8s-app: netflixoss-eureka
#    spec:
#      containers:
#        - name: netflixoss-eureka
#          image: netflixoss/eureka:1.3.1
#---
#kind: Service
#apiVersion: v1
#metadata:
#  labels:
#    k8s-app: netflixoss-eureka
#  name: netflixoss-eureka
#  namespace: default
#spec:
#  type: NodePort
#  ports:
#    - port: 8080
#      targetPort: 8080
#  selector:
#    k8s-app: netflixoss-eureka
