version: '2'
services:
  eureka:
    container_name: netflix-eureka
    image: dinutac/netflixoss-eureka:latest
    expose:
      - "8080"
    ports:
      - "8080:8080"
    networks:
      - elastic

  estuary-discovery:
    container_name: estuary-discovery
    image: dinutac/estuary-discovery:latest
    command: bash -c "sleep 60 && /scripts/main_flask.py"
    environment:
      FLUENTD_IP_PORT: fluentd:24224
      EUREKA_SERVER: http://eureka:8080/eureka/v2
      APP_IP_PORT: 192.168.0.222:8081
    expose:
      - "8080"
    ports:
      - "8081:8080"
    networks:
      - elastic

  estuary-agent:
    container_name: estuary-agent
    image: dinutac/estuary-agent:latest
    command: bash -c "sleep 60 && /scripts/main_flask.py"
    environment:
      FLUENTD_IP_PORT: fluentd:24224
      EUREKA_SERVER: http://eureka:8080/eureka/v2
      APP_IP_PORT: 192.168.0.222:8082
    expose:
      - "8080"
    ports:
      - "8082:8080"
    networks:
      - elastic

  estuary-agent-java:
    container_name: estuary-agent-java
    image: dinutac/estuary-agent-java:latest
    entrypoint: bash -c "sleep 60 && java -jar /app/agent-exec.jar --eureka.client.enabled=true"
    environment:
      FLUENTD_IP_PORT: fluentd:24224
      EUREKA_SERVER: http://eureka:8080/eureka/v2
      APP_IP: 192.168.0.222
      PORT: 8083
      HTTP_AUTH_TOKEN: None
    expose:
      - "8080"
    ports:
      - "8083:8083"
    networks:
      - elastic

#  web:
#    image: httpd
#    ports:
#      - "80:80"
#    links:
#      - fluentd
#    logging:
#      driver: "fluentd"
#      options:
#        fluentd-address: localhost:24224
#        tag: httpd.access
#    networks:
#      - elastic
      
  fluentd:
    build: ./fluentd
    volumes:
      - ./fluentd/conf:/fluentd/etc
    links:
      - "es01"
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    networks:
      - elastic
  
#  apm01:
#    build: ./apm
#    ports:
#      - "8200:8200"
#    networks:
#      - elastic
  
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.8.0
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
#      - discovery.seed_hosts=es02
      - cluster.initial_master_nodes=es01 #,es02
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - elastic

#  es02:
#    image: docker.elastic.co/elasticsearch/elasticsearch:7.8.0
#    container_name: es02
#    environment:
#      - node.name=es02
#      - cluster.name=es-docker-cluster
#      - discovery.seed_hosts=es01
#      - cluster.initial_master_nodes=es01,es02
#      - bootstrap.memory_lock=true
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
#    volumes:
#      - data02:/usr/share/elasticsearch/data
#    networks:
#      - elastic
      
  kib01:
    image: docker.elastic.co/kibana/kibana:7.8.0
    container_name: kib01
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://es01:9200
      ELASTICSEARCH_HOSTS: http://es01:9200
    networks:
      - elastic

volumes:
  data01:
    driver: local
#  data02:
#    driver: local

networks:
  elastic:
    driver: bridge